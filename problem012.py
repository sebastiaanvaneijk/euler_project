# The sequence of triangle numbers is generated by adding the natural numbers.
# So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
#
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
# Let us list the factors of the first seven triangle numbers:
#
#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.
#
# What is the value of the first triangle number to have over five hundred divisors?

import eulerproject_functions as ef


def generate_triangle_number():
    n = 1
    while True:
        yield sum(range(1, n+1))
        n += 1


factors = []

n = 1
triangle_generator = generate_triangle_number()
while len(factors) <= 500:
    tn = sum(range(1, n+1))
    factors = ef.find_factors(n=tn)
    n += 1

print(tn, factors)
